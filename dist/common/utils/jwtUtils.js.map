{"version":3,"sources":["../../../src/common/utils/jwtUtils.ts","../../../src/common/utils/envConfig.ts"],"sourcesContent":["import jwt, { JsonWebTokenError, TokenExpiredError } from \"jsonwebtoken\";\nimport { env } from \"./envConfig\";\n\nconst secret = env.JWT_SECRET;\n\nexport function generateToken(userId: string): string {\n  return jwt.sign({ userId }, secret, { expiresIn: \"1d\" }); // Access token valid for 1 day\n}\n\nexport function generateRefreshToken(userId: string): string {\n  return jwt.sign({ userId }, secret, { expiresIn: \"7d\" }); // Refresh token valid for 7 days\n}\n\nexport function verifyToken(token: string, type: \"access\" | \"refresh\" = \"access\"): any {\n  try {\n    return jwt.verify(token, secret);\n  } catch (error) {\n    if (error instanceof TokenExpiredError) {\n      throw new TokenExpiredError(\"Token expired\", error.expiredAt);\n    } else if (error instanceof JsonWebTokenError) {\n      throw new JsonWebTokenError(\"Invalid token\");\n    } else {\n      throw new Error(\"Token verification failed\");\n    }\n  }\n}\n","import dotenv from \"dotenv\";\nimport { cleanEnv, host, num, port, str, testOnly } from \"envalid\";\n\ndotenv.config();\n\nexport const env = cleanEnv(process.env, {\n  NODE_ENV: str({ devDefault: testOnly(\"test\"), choices: [\"development\", \"production\", \"test\"] }),\n  HOST: host({ devDefault: testOnly(\"localhost\") }),\n  PORT: port({ devDefault: testOnly(3000) }),\n  CORS_ORIGIN: str({ devDefault: testOnly(\"http://localhost:5173\") }),\n  COMMON_RATE_LIMIT_MAX_REQUESTS: num({ devDefault: testOnly(1000) }),\n  COMMON_RATE_LIMIT_WINDOW_MS: num({ devDefault: testOnly(1000) }),\n  DATABASE_URL: str(),\n  JWT_SECRET: str(),\n});\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA0D;;;ACA1D,oBAAmB;AACnB,qBAAyD;AAEzD,cAAAA,QAAO,OAAO;AAEP,IAAM,UAAM,yBAAS,QAAQ,KAAK;AAAA,EACvC,cAAU,oBAAI,EAAE,gBAAY,yBAAS,MAAM,GAAG,SAAS,CAAC,eAAe,cAAc,MAAM,EAAE,CAAC;AAAA,EAC9F,UAAM,qBAAK,EAAE,gBAAY,yBAAS,WAAW,EAAE,CAAC;AAAA,EAChD,UAAM,qBAAK,EAAE,gBAAY,yBAAS,GAAI,EAAE,CAAC;AAAA,EACzC,iBAAa,oBAAI,EAAE,gBAAY,yBAAS,uBAAuB,EAAE,CAAC;AAAA,EAClE,oCAAgC,oBAAI,EAAE,gBAAY,yBAAS,GAAI,EAAE,CAAC;AAAA,EAClE,iCAA6B,oBAAI,EAAE,gBAAY,yBAAS,GAAI,EAAE,CAAC;AAAA,EAC/D,kBAAc,oBAAI;AAAA,EAClB,gBAAY,oBAAI;AAClB,CAAC;;;ADXD,IAAM,SAAS,IAAI;AAEZ,SAAS,cAAc,QAAwB;AACpD,SAAO,oBAAAC,QAAI,KAAK,EAAE,OAAO,GAAG,QAAQ,EAAE,WAAW,KAAK,CAAC;AACzD;AAEO,SAAS,qBAAqB,QAAwB;AAC3D,SAAO,oBAAAA,QAAI,KAAK,EAAE,OAAO,GAAG,QAAQ,EAAE,WAAW,KAAK,CAAC;AACzD;AAEO,SAAS,YAAY,OAAe,OAA6B,UAAe;AACrF,MAAI;AACF,WAAO,oBAAAA,QAAI,OAAO,OAAO,MAAM;AAAA,EACjC,SAAS,OAAO;AACd,QAAI,iBAAiB,uCAAmB;AACtC,YAAM,IAAI,sCAAkB,iBAAiB,MAAM,SAAS;AAAA,IAC9D,WAAW,iBAAiB,uCAAmB;AAC7C,YAAM,IAAI,sCAAkB,eAAe;AAAA,IAC7C,OAAO;AACL,YAAM,IAAI,MAAM,2BAA2B;AAAA,IAC7C;AAAA,EACF;AACF;","names":["dotenv","jwt"]}